<Goal> ::= <MainClass> (<ClassDeclaration>)* ;

<MainClass> ::=
  <CLASS> <ID>
    <LBRACE>
      <PUBLIC> <STATIC> <VOID> <MAIN>
      <LPARENS>
        <STRING> <LBRACKET> <RBRACKET> <ID>
      <RPARENS>
      <LBRACE>
	<PrintStatement>
      <RBRACE>
    <RBRACE> ;

<ClassDeclaration> ::= <CLASS> <ID> <ClassDeclarationTail> ;

<ClassDeclarationTail> ::=
  [<EXTENDS> <ID>]
  <LBRACE> (<VarDeclaration>)* (<MethodDeclaration>)* <RBRACE> ;

<VarDeclaration> ::= <Type> <ID> <SEMI> ;


<MethodDeclaration> ::=
  <PUBLIC> <Type> <ID>
  <LPARENS> [<FormalParameterList>] <RPARENS>
  <LBRACE> <MethodDeclarationTail> <RBRACE> ;

<FormalParameterList> ::= <FormalParameter> (<COMMA> <FormalParameter>)* ;
<FormalParameter> ::= <Type> <ID> ;

<Type> ::=
   <ArrayOrIntegerType>
 | <BooleanType>
 | <ID> ;

<ArrayOrIntegerType> ::= <INT> [ <LBRACKET> <RBRACKET> ] ;

<BooleanType> ::= <BOOLEAN> ;


<MethodDeclarationTail> ::=
  [<VarDeclOrStatement>]
  <RETURN> <Expression> <SEMI> ;


<VarDeclOrStatement> ::=
   (<ArrayOrIntegerType> | <BooleanType>) <ID> <SEMI> [<VarDeclOrStatement>]
 | <Block> <Statements>
 | <IfStatement> <Statements>
 | <WhileStatement> <Statements>
 | <PrintStatement> <Statements>
 | <ID> <IdentifierStatement> ;

<Statements> ::= (<Statement>)*;


<IdentifierStatement> ::=
   <ID> <SEMI> [<VarDeclOrStatement>]
 | <IDStatementTail> <Statements> ;


<Statement> ::=
   <Block>
 | <IfStatement>
 | <WhileStatement>
 | <PrintStatement>
 | <ID> <IDStatementTail> ;

<Block> ::= <LBRACE> <Statements> <RBRACE> ;

<IfStatement> ::=
  <IF> <LPARENS> <Expression> <RPARENS>
    <Statement>
  <ELSE> <Statement> ;

<WhileStatement> ::=
  <WHILE> <LPARENS> <Expression> <RPARENS> <Statement> ;

<PrintStatement> ::= <PRINT> <LPARENS> <Expression> <RPARENS> <SEMI> ;

<IDStatementTail> ::=
   [<LBRACKET> <Expression> <RBRACKET>]
   <ASSIGN> <Expression> <SEMI> ;


<Expression> ::= <AndExpression> ;

<AndExpression> ::=
  <LessThanExpression> (<AND> <LessThanExpression>)* ;

<LessThanExpression> ::=
  <AdditiveExpression> (<LESS> <AdditiveExpression>)* ;

<AdditiveExpression> ::=
  <TimesExpression> ((<ADD>|<SUB>) <TimesExpression>)* ;

<TimesExpression> ::=
  <PrefixExpression> (<MULT> <PrefixExpression>)* ;

<PrefixExpression> ::= (<NOT>)* <PostFixExpression> ;

<PostFixExpression> ::=
  <PrimaryExpression> (<ArrayLookup> | <ArrayLengthOrMessageSend>)* ;

<ArrayLookup> ::= <LBRACKET> <Expression> <RBRACKET> ;

<ArrayLengthOrMessageSend> ::=
  <DOT> (<LENGTH> | <ID> <LPARENS> [<ExpressionList>] <RPARENS>) ;

<PrimaryExpression> ::=
   <NUM>
 | <TRUE>
 | <FALSE>
 | <ID>
 | <THIS>
 | <LPARENS> <Expression> <RPARENS>
 | <NEW> <AllocationOrBracketExpression> ;

<AllocationOrBracketExpression> ::=
   <INT> <LBRACKET> <Expression> <RBRACKET>
 | <ID> <LPARENS> <RPARENS> ;

<ExpressionList> ::= <Expression> (<COMMA> <Expression>)* ;
